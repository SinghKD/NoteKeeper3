{"ast":null,"code":"import _slicedToArray from\"/home/kd/note-keeper2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AddIcon from\"@material-ui/icons/Add\";import Fab from\"@material-ui/core/Fab\";import Zoom from\"@material-ui/core/Zoom\";function CreateArea(props){var _useState=useState({title:\"\",text:\"\"}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),zoom=_useState4[0],setZoom=_useState4[1];function doZoom(){setZoom(true);}function addText(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setNote(function(prevValue){if(name===\"title\")return{title:value,text:prevValue.text};else return{title:prevValue.title,text:value};});}function addIt(event){props.addFunc(note);event.preventDefault();}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"create-note\"},zoom?/*#__PURE__*/React.createElement(\"input\",{onChange:addText,name:\"title\",placeholder:\"Title\",value:note.title}):null,/*#__PURE__*/React.createElement(\"textarea\",{onClick:doZoom,onChange:addText,name:\"content\",placeholder:\"Take a note...\",rows:zoom?\"3\":\"1\",value:note.text}),/*#__PURE__*/React.createElement(Zoom,{in:zoom},/*#__PURE__*/React.createElement(Fab,{onClick:addIt},/*#__PURE__*/React.createElement(AddIcon,null)))));}export default CreateArea;","map":{"version":3,"sources":["/home/kd/note-keeper2/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","title","text","note","setNote","zoom","setZoom","doZoom","addText","event","target","value","name","prevValue","addIt","addFunc","preventDefault"],"mappings":"4IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,eACDL,QAAQ,CAAC,CAC/BM,KAAK,CAAE,EADwB,CAE/BC,IAAI,CAAE,EAFyB,CAAD,CADP,wCAClBC,IADkB,eACZC,OADY,8BAMDT,QAAQ,CAAC,KAAD,CANP,yCAMlBU,IANkB,eAMZC,OANY,eAQzB,QAASC,CAAAA,MAAT,EAAkB,CAChBD,OAAO,CAAC,IAAD,CAAP,CACD,CAED,QAASE,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,mBACEA,KAAK,CAACC,MADR,CACdC,KADc,eACdA,KADc,CACPC,IADO,eACPA,IADO,CAGtBR,OAAO,CAAC,SAAAS,SAAS,CAAI,CACnB,GAAID,IAAI,GAAK,OAAb,CACE,MAAO,CACLX,KAAK,CAAEU,KADF,CAELT,IAAI,CAAEW,SAAS,CAACX,IAFX,CAAP,CADF,IAME,OAAO,CACLD,KAAK,CAAEY,SAAS,CAACZ,KADZ,CAELC,IAAI,CAAES,KAFD,CAAP,CAIH,CAXM,CAAP,CAYD,CAED,QAASG,CAAAA,KAAT,CAAeL,KAAf,CAAsB,CACpBT,KAAK,CAACe,OAAN,CAAcZ,IAAd,EACAM,KAAK,CAACO,cAAN,GACD,CAED,mBACE,4CACE,4BAAM,SAAS,CAAC,aAAhB,EACGX,IAAI,cACH,6BACE,QAAQ,CAAEG,OADZ,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,OAHd,CAIE,KAAK,CAAEL,IAAI,CAACF,KAJd,EADG,CAOD,IARN,cAUE,gCACE,OAAO,CAAEM,MADX,CAEE,QAAQ,CAAEC,OAFZ,CAGE,IAAI,CAAC,SAHP,CAIE,WAAW,CAAC,gBAJd,CAKE,IAAI,CAAEH,IAAI,CAAG,GAAH,CAAS,GALrB,CAME,KAAK,CAAEF,IAAI,CAACD,IANd,EAVF,cAkBE,oBAAC,IAAD,EAAM,EAAE,CAAEG,IAAV,eACE,oBAAC,GAAD,EAAK,OAAO,CAAES,KAAd,eACE,oBAAC,OAAD,MADF,CADF,CAlBF,CADF,CADF,CA4BD,CAED,cAAef,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    text: \"\"\n  });\n\n  const [zoom, setZoom] = useState(false);\n\n  function doZoom() {\n    setZoom(true);\n  }\n\n  function addText(event) {\n    const { value, name } = event.target;\n\n    setNote(prevValue => {\n      if (name === \"title\")\n        return {\n          title: value,\n          text: prevValue.text\n        };\n      else\n        return {\n          title: prevValue.title,\n          text: value\n        };\n    });\n  }\n\n  function addIt(event) {\n    props.addFunc(note);\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {zoom ? (\n          <input\n            onChange={addText}\n            name=\"title\"\n            placeholder=\"Title\"\n            value={note.title}\n          />\n        ) : null}\n\n        <textarea\n          onClick={doZoom}\n          onChange={addText}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows={zoom ? \"3\" : \"1\"}\n          value={note.text}\n        />\n        <Zoom in={zoom}>\n          <Fab onClick={addIt}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}